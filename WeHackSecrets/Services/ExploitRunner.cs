using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using WeHackSecrets.Services.Models;

namespace WeHackSecrets.Services
{
    public class ExploitRunner : IExploitRunner
    {
        private readonly int _id;
        private readonly IExploit _exploit;
        private readonly Task _task;

        private bool _started = false;

        public ExploitRunner(int id, IExploit exploit)
        {
            if (exploit == null) throw new ArgumentNullException("exploit");

            _exploit = exploit;
            _id = id;
            _task = new Task(() => _exploit.Exploit());
        }

        public void Start()
        {
            if (_started) return;

            _task.Start();
            _started = true;
        }

        public ExploitState CurrentState
        {
            get
            {
                var state = new ExploitState
                {
                    Id = _id
                };

                switch (_task.Status)
                {
                    case TaskStatus.RanToCompletion:
                        state.Exploited = _exploit.Successful ? ExploitStatus.Successful : ExploitStatus.Failed;
                        state.Value = _exploit.SecretValue;
                        break;
                    case TaskStatus.Created:
                        state.Exploited = ExploitStatus.NotStarted;
                        break;
                    case TaskStatus.Canceled:
                    case TaskStatus.Faulted:
                        state.Exploited = ExploitStatus.Failed;
                        break;
                    default:
                        state.Exploited = ExploitStatus.Running;
                        break;
                }

                return state;
            }
        }

    }
}
