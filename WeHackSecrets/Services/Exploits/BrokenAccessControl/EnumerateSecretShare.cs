using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using WeHackSecrets.Services.Actions;

namespace WeHackSecrets.Services.Exploits.BrokenAccessControl
{
    public class EnumerateSecretShare : IExploit
    {
        private string _targetKey;

        private readonly List<ISecretsList> _sharesList;

        private bool _successful = false;
        private string _secretValue = "";

        public EnumerateSecretShare(string targetKey, List<ISecretsList> sharesList)
        {
            if (targetKey == null) throw new ArgumentNullException("targetKey");
            if (sharesList == null) throw new ArgumentNullException("sharesList");

            _targetKey = targetKey;
            _sharesList = sharesList;
        }

        public bool Successful
        {
            get
            {
                return _successful;
            }
        }

        public string SecretValue
        {
            get
            {
                return _secretValue;
            }
        }

        public void Exploit()
        {
            foreach (var share in _sharesList)
            {
                try
                {
                    // Harvest the targets secret from the secrets page

                    var secretValue = share.GetTargetSecret(_targetKey);

                    if (!string.IsNullOrEmpty(secretValue))
                    {
                        _successful = true;
                        _secretValue = secretValue;
                        break;
                    }
                }
                catch (Exception ex)
                {
                    // No further action
                    // Exploit will have failed
                }
            }
        }

    }
}
